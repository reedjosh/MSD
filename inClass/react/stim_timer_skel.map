Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodhi4.o)
                              stim_timer_skel.o (__divmodhi4)
/usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodsi4.o)
                              stim_timer_skel.o (__udivmodsi4)
/usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/crtatmega128.o (exit)
/usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_copy_data.o)
                              stim_timer_skel.o (__do_copy_data)
/usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_clear_bss.o)
                              LCDDriver.o (__do_clear_bss)
/usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/libc.a(rand.o)
                              stim_timer_skel.o (rand)
/usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodsi4.o)
                              /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/libc.a(rand.o) (__divmodsi4)
/usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_negsi2.o)
                              /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodsi4.o) (__negsi2)
/usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_muluhisi3.o)
                              /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/libc.a(rand.o) (__muluhisi3)
/usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_mulshisi3.o)
                              /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/libc.a(rand.o) (__mulohisi3)
/usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_umulhisi3.o)
                              /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_muluhisi3.o) (__umulhisi3)

Allocating common symbols
Common symbol       size              file

lcd_str             0x10              LCDDriver.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/crtatmega128.o
LOAD stim_timer_skel.o
LOAD LCDDriver.o
START GROUP
LOAD /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/libatmega128.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xc04
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000008c                . = ALIGN (0x2)
                0x000000000000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000008c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000008c                __trampolines_end = .
 *(.progmem*)
                0x000000000000008c                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000008c                __ctors_start = .
 *(.ctors)
                0x000000000000008c                __ctors_end = .
                0x000000000000008c                __dtors_start = .
 *(.dtors)
                0x000000000000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000008c        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/crtatmega128.o
                0x000000000000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000008c        0xc /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000098       0x1a /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_copy_data.o)
                0x0000000000000098                __do_copy_data
 .init4         0x00000000000000b2       0x10 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_clear_bss.o)
                0x00000000000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000c2        0x8 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/crtatmega128.o
 *(.init9)
 *(.text)
 .text          0x00000000000000ca        0x4 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/crtatmega128.o
                0x00000000000000ca                __vector_22
                0x00000000000000ca                __vector_28
                0x00000000000000ca                __vector_1
                0x00000000000000ca                __vector_32
                0x00000000000000ca                __vector_34
                0x00000000000000ca                __vector_24
                0x00000000000000ca                __vector_12
                0x00000000000000ca                __bad_interrupt
                0x00000000000000ca                __vector_6
                0x00000000000000ca                __vector_31
                0x00000000000000ca                __vector_3
                0x00000000000000ca                __vector_23
                0x00000000000000ca                __vector_30
                0x00000000000000ca                __vector_25
                0x00000000000000ca                __vector_11
                0x00000000000000ca                __vector_13
                0x00000000000000ca                __vector_17
                0x00000000000000ca                __vector_19
                0x00000000000000ca                __vector_7
                0x00000000000000ca                __vector_27
                0x00000000000000ca                __vector_5
                0x00000000000000ca                __vector_33
                0x00000000000000ca                __vector_4
                0x00000000000000ca                __vector_9
                0x00000000000000ca                __vector_2
                0x00000000000000ca                __vector_21
                0x00000000000000ca                __vector_15
                0x00000000000000ca                __vector_29
                0x00000000000000ca                __vector_8
                0x00000000000000ca                __vector_26
                0x00000000000000ca                __vector_14
                0x00000000000000ca                __vector_10
                0x00000000000000ca                __vector_16
                0x00000000000000ca                __vector_18
                0x00000000000000ca                __vector_20
 .text          0x00000000000000ce        0x0 stim_timer_skel.o
 .text          0x00000000000000ce      0x778 LCDDriver.o
                0x00000000000000ce                strobe_lcd
                0x00000000000000e0                LCD_Clr
                0x000000000000011c                LCD_MovCursorLn1
                0x000000000000014c                LCD_MovCursorLn2
                0x000000000000017c                LCD_CursorBlinkOn
                0x00000000000001ac                LCD_CursorBlinkOff
                0x00000000000001dc                LCD_MovCursor
                0x000000000000021e                LCD_FillSpaces
                0x000000000000025a                LCD_PutDec8
                0x000000000000031c                LCD_PutDec16
                0x00000000000004a0                LCD_PutChar
                0x00000000000004d0                LCD_PutStr
                0x000000000000052e                LCD_SPIInit
                0x000000000000054c                LCD_Init
 .text          0x0000000000000846        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000846        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000000846        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_exit.o)
 .text          0x0000000000000846        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000000846        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000000846        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000846        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/libc.a(rand.o)
 .text          0x0000000000000846        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodsi4.o)
 .text          0x0000000000000846        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_negsi2.o)
 .text          0x0000000000000846        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_muluhisi3.o)
 .text          0x0000000000000846        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_mulshisi3.o)
 .text          0x0000000000000846        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_umulhisi3.o)
                0x0000000000000846                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000846      0x1f0 stim_timer_skel.o
                0x0000000000000846                main
 .text.libgcc.mul
                0x0000000000000a36        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000000a36       0x28 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodhi4.o)
                0x0000000000000a36                __divmodhi4
                0x0000000000000a36                _div
 .text.libgcc   0x0000000000000a5e        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000a5e        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000a5e        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000a5e        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000a5e        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000000a5e        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000000a5e       0x44 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodsi4.o)
                0x0000000000000a5e                __udivmodsi4
 .text.libgcc   0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000aa2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000aa2       0x28 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodhi4.o)
                0x0000000000000aa2                __udivmodhi4
 .text.libgcc   0x0000000000000aca        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000aca        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000aca        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000aca        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000aca        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.avr-libc
                0x0000000000000aca       0xb4 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/libc.a(rand.o)
                0x0000000000000b5c                rand_r
                0x0000000000000b60                rand
                0x0000000000000b68                srand
 .text.libgcc.mul
                0x0000000000000b7e        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x0000000000000b7e       0x2e /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodsi4.o)
                0x0000000000000b7e                __divmodsi4
 .text.libgcc   0x0000000000000bac        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000bac        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000bac        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000bac        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000bac        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x0000000000000bac        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.div
                0x0000000000000bac       0x10 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_negsi2.o)
                0x0000000000000bac                __negsi2
 .text.libgcc   0x0000000000000bbc        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.prologue
                0x0000000000000bbc        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.builtins
                0x0000000000000bbc        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fmul
                0x0000000000000bbc        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fixed
                0x0000000000000bbc        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.mul
                0x0000000000000bbc       0x16 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_muluhisi3.o)
                0x0000000000000bbc                __muluhisi3
 .text.libgcc.div
                0x0000000000000bd2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_muluhisi3.o)
 .text.libgcc   0x0000000000000bd2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_muluhisi3.o)
 .text.libgcc.prologue
                0x0000000000000bd2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_muluhisi3.o)
 .text.libgcc.builtins
                0x0000000000000bd2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_muluhisi3.o)
 .text.libgcc.fmul
                0x0000000000000bd2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_muluhisi3.o)
 .text.libgcc.fixed
                0x0000000000000bd2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_muluhisi3.o)
 .text.libgcc.mul
                0x0000000000000bd2       0x10 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_mulshisi3.o)
                0x0000000000000bd2                __mulshisi3
                0x0000000000000bd8                __mulohisi3
 .text.libgcc.div
                0x0000000000000be2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_mulshisi3.o)
 .text.libgcc   0x0000000000000be2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_mulshisi3.o)
 .text.libgcc.prologue
                0x0000000000000be2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_mulshisi3.o)
 .text.libgcc.builtins
                0x0000000000000be2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_mulshisi3.o)
 .text.libgcc.fmul
                0x0000000000000be2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_mulshisi3.o)
 .text.libgcc.fixed
                0x0000000000000be2        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_mulshisi3.o)
 .text.libgcc.mul
                0x0000000000000be2       0x1e /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_umulhisi3.o)
                0x0000000000000be2                __umulhisi3
 .text.libgcc.div
                0x0000000000000c00        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x0000000000000c00        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x0000000000000c00        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x0000000000000c00        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x0000000000000c00        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x0000000000000c00        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_umulhisi3.o)
                0x0000000000000c00                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000c00        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_exit.o)
                0x0000000000000c00                exit
                0x0000000000000c00                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000c00        0x4 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000c04                _etext = .

.data           0x0000000000800100       0x78 load address 0x0000000000000c04
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/crtatmega128.o
 .data          0x0000000000800100        0x0 stim_timer_skel.o
 .data          0x0000000000800100        0x0 LCDDriver.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800100        0x4 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/libc.a(rand.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_negsi2.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_muluhisi3.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_mulshisi3.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_umulhisi3.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800104       0x74 stim_timer_skel.o
 *(.gnu.linkonce.d*)
                0x0000000000800178                . = ALIGN (0x2)
                0x0000000000800178                _edata = .
                0x0000000000800178                PROVIDE (__data_end, .)

.bss            0x0000000000800178       0x10
                0x0000000000800178                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/crtatmega128.o
 .bss           0x0000000000800178        0x0 stim_timer_skel.o
 .bss           0x0000000000800178        0x0 LCDDriver.o
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/libc.a(rand.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_negsi2.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_muluhisi3.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_mulshisi3.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/5.2.0/avr51/libgcc.a(_umulhisi3.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800178       0x10 LCDDriver.o
                0x0000000000800178                lcd_str
                0x0000000000800188                PROVIDE (__bss_end, .)
                0x0000000000000c04                __data_load_start = LOADADDR (.data)
                0x0000000000000c7c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800188        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800188                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1f80
 *(.stab)
 .stab          0x0000000000000000      0x930 stim_timer_skel.o
 .stab          0x0000000000000930     0x1650 LCDDriver.o
                                       0x1848 (size before relaxing)

.stabstr        0x0000000000000000     0x102c
 *(.stabstr)
 .stabstr       0x0000000000000000     0x102c stim_timer_skel.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 stim_timer_skel.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 LCDDriver.o
 .comment       0x0000000000000011       0x12 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/libc.a(rand.o)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/crtatmega128.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x780
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x780 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/crtatmega128.o

.debug_abbrev   0x0000000000000000      0x718
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x718 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/crtatmega128.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/crtatmega128.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x280
 *(.debug_str)
 .debug_str     0x0000000000000000      0x280 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr51/crtatmega128.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(stim_timer_skel.elf elf32-avr)
LOAD linker stubs
